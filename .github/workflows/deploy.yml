name: Deploy Portfolio to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean
        run: |
          ssh -i ~/.ssh/github-actions-key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<'EOF'
            set -ex

            echo "🔹 Navigating to project directory..."
            cd /home/apps/portfolio || { echo "❌ Folder not found!"; exit 1; }

            echo "🔹 Pulling latest changes from GitHub..."
            git pull origin main || { echo "❌ Git pull failed!"; exit 1; }

            echo "🔹 Removing old portfolio container..."
            docker rm -f portfolio-container || true

            echo "🔹 Building new portfolio container..."
            docker build \
              --build-arg VITE_API_KEY="${{ secrets.VITE_API_KEY }}" \
              --build-arg VITE_AUTH_DOMAIN="${{ secrets.VITE_AUTH_DOMAIN }}" \
              --build-arg VITE_PROJECT_ID="${{ secrets.VITE_PROJECT_ID }}" \
              --build-arg VITE_STORAGE_BUCKET="${{ secrets.VITE_STORAGE_BUCKET }}" \
              --build-arg VITE_MESSAGING_SENDER_ID="${{ secrets.VITE_MESSAGING_SENDER_ID }}" \
              --build-arg VITE_APP_ID="${{ secrets.VITE_APP_ID }}" \
              --build-arg VITE_MEASUREMENT_ID="${{ secrets.VITE_MEASUREMENT_ID }}" \
              --build-arg VITE_CLOUDINARY_CLOUD_NAME="${{ secrets.VITE_CLOUDINARY_CLOUD_NAME }}" \
              --build-arg VITE_CLOUDINARY_UPLOAD_PRESET="${{ secrets.VITE_CLOUDINARY_UPLOAD_PRESET }}" \
              -t portfolio-app .

            echo "🔹 Running new portfolio container..."
            docker run -d --name portfolio-container -p 3000:80 portfolio-app

            echo "🔹 Restarting Caddy to apply changes..."
            docker restart caddy-container

            echo "✅ Deployment completed successfully!"
          EOF
